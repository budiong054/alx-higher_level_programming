The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

First import and set the path

	>>> import os, sys
	>>> parent = os.path.abspath('.')
	>>> sys.path.insert(1, parent)

Then, import ``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now the test case:=>

Case 1: When a non list type is passed as a `matrix` argument

case 2: When a `list` contains a type different from `int` or `float`

Case 3: When a non `int` or non `float` is pass as `div` argument

	>>> matrix = [	#+NORMALIZE_SPACE
		[1, 2, 3],
		[4, 5, 6]
	    ] 
	>>> matrix_divided(matrix, "5")
	Traceback (most recent call last):
		...
	TypeError: div must be a number
	
Case 4: when zero `0` is psssed as a `div` argument

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Case 5: Check for the correct output

	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix
	[[1, 2, 3], [4, 5, 6]]
